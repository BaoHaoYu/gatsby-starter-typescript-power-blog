{"version":3,"sources":["webpack:///./src/pages/blog.tsx","webpack:///./src/utils/media.ts","webpack:///./config/SiteConfig.ts","webpack:///./src/components/Subline.tsx","webpack:///./src/components/Article.tsx","webpack:///./src/components/Button.tsx","webpack:///./src/components/Header.tsx","webpack:///./config/Theme.ts","webpack:///./src/components/Layout.tsx","webpack:///./src/components/PrevNext.tsx","webpack:///./src/components/SectionTitle.tsx","webpack:///./src/components/SEO.tsx","webpack:///./src/components/Wrapper.tsx","webpack:///./src/components/Content.tsx","webpack:///./src/components/index.tsx"],"names":["BlogPage","render","_data$allMarkdownRema","this","props","data","allMarkdownRemark","edges","totalCount","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components__WEBPACK_IMPORTED_MODULE_4__","react_helmet__WEBPACK_IMPORTED_MODULE_5___default","title","config","siteTitle","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","map","post","node","frontmatter","date","excerpt","timeToRead","slug","fields","category","key","React","Component","BlogQuery","__webpack_require__","d","__webpack_exports__","media","tablet","phone","pathPrefix","siteTitleAlt","siteUrl","siteLanguage","siteBanner","favicon","siteDescription","author","siteLogo","userTwitter","ogSiteName","ogLanguage","themeColor","backgroundColor","headerFontFamily","bodyFontFamily","baseFontSize","siteFBAppID","Subline","styled","div","withConfig","displayName","componentId","theme","fontSize","small","colors","grey","light","sectionTitle","Post","article","Title","h2","Initiale","span","Excerpt","p","Article","_React$PureComponent","apply","arguments","inheritsLoose_default","prototype","_this$props","firstChar","charAt","react_default","gatsby_browser_entry","kebabCase","PureComponent","Button","button","primary","big","transitions","normal","lighten","Wrapper","header","darken","Content","Header","children","Theme","bg","dark","default","ultraLight","GlobalStyle","createGlobalStyle","_templateObject","Footer","footer","Layout","query","styled_components_browser_esm","Fragment","split","site","buildTime","href","_1536950682","Prev","Next","PrevNext","prev","next","PrevNext_Wrapper","SectionTitle","SEO","description","image","postURL","postNode","postPath","postSEO","realPrefix","blogURL","schemaOrgJSONLD","@context","@type","@id","url","name","alternateName","headline","datePublished","dateModified","publisher","logo","isPartOf","mainEntityOfPage","Helmet_default","lang","content","type","JSON","stringify","property","Article_Article","Header_Header","Layout_Layout","PrevNext_PrevNext","SEO_SEO","Wrapper_Wrapper","Content_Content"],"mappings":"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","file":"component---src-pages-blog-tsx-b7fc067e29ef41dc92c9.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport { Layout, Article, Wrapper, SectionTitle, Header, Content } from '../components';\nimport PageProps from '../models/PageProps';\nimport Helmet from 'react-helmet';\nimport config from '../../config/SiteConfig';\n\nexport default class BlogPage extends React.Component<PageProps> {\n  public render() {\n    const { data } = this.props;\n    const { edges, totalCount } = data.allMarkdownRemark;\n\n    return (\n      <Layout>\n        <Wrapper>\n          <Helmet title={`Blog | ${config.siteTitle}`} />\n          <Header>\n            <Link to=\"/\">{config.siteTitle}</Link>\n          </Header>\n          <Content>\n            <SectionTitle>Latest stories ({totalCount})</SectionTitle>\n            {edges.map(post => (\n              <Article\n                title={post.node.frontmatter.title}\n                date={post.node.frontmatter.date}\n                excerpt={post.node.excerpt}\n                timeToRead={post.node.timeToRead}\n                slug={post.node.fields.slug}\n                category={post.node.frontmatter.category}\n                key={post.node.fields.slug}\n              />\n            ))}\n          </Content>\n        </Wrapper>\n      </Layout>\n    );\n  }\n}\nexport const BlogQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD.MM.YYYY\")\n            category\n          }\n          excerpt(pruneLength: 200)\n          timeToRead\n        }\n      }\n    }\n  }\n`;\n","const sizes = {\n  tablet: '1200px',\n  phone: '600px',\n};\n\nexport const media = {\n  tablet: `(max-width: ${sizes.tablet})`,\n  phone: `(max-width: ${sizes.phone})`,\n};\n","export default {\n  pathPrefix: '/', // Prefix for all links. If you deploy your site to example.com/portfolio your pathPrefix should be \"portfolio\"\n\n  siteTitle: 'Personal Typescript Blog', // Navigation and Site Title\n  siteTitleAlt: 'Personal Blog - Gatsby Starter', // Alternative Site title for SEO\n  siteUrl: 'https://personal-typescript-blog.github.com', // Domain of your site. No trailing slash!\n  siteLanguage: 'en', // Language Tag on <html> element\n  siteBanner: '/social/banner.jpg', // Your image for og:image tag. You can find it in the /static folder\n  favicon: 'src/favicon.png', // Your image for favicons. You can find it in the /src folder\n  siteDescription: 'Personal Blog with big typography', // Your site description\n  author: 'Majid Hajian', // Author for schemaORGJSONLD\n  siteLogo: '/social/logo.png', // Image for schemaORGJSONLD\n\n  // siteFBAppID: '123456789', // Facebook App ID - Optional\n  userTwitter: '@mhadaily', // Twitter Username - Optional\n  ogSiteName: 'mhadaily', // Facebook Site Name - Optional\n  ogLanguage: 'en_US', // Facebook Language\n\n  // Manifest and Progress color\n  // See: https://developers.google.com/web/fundamentals/web-app-manifest/\n  themeColor: '#3498DB',\n  backgroundColor: '#2b2e3c',\n\n  // Settings for typography.ts\n  headerFontFamily: 'Bitter',\n  bodyFontFamily: 'Open Sans',\n  baseFontSize: '18px',\n\n  // Social media\n  siteFBAppID: '',\n};\n","import styled from 'styled-components';\n\ninterface Props {\n  theme: {\n    fontSize: {\n      small: number;\n    };\n    colors: {\n      grey: {\n        light: string;\n      };\n    };\n  };\n  sectionTitle: string;\n}\n\nexport const Subline: any = styled.div`\n  font-size: ${(props: Props) => props.theme.fontSize.small};\n  color: ${(props: Props) => props.theme.colors.grey.light};\n  ${(props: Props) => props.sectionTitle && 'margin-top: -3rem'};\n  ${(props: Props) => props.sectionTitle && 'margin-bottom: 4rem'};\n  ${(props: Props) => props.sectionTitle && 'text-align: center'};\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport { Subline } from './Subline';\n\nconst Post = styled.article`\n  display: flex;\n  flex-direction: column;\n  margin-top: 3.5rem;\n  margin-bottom: 3.5rem;\n`;\n\nconst Title = styled.h2`\n  position: relative;\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n  margin-bottom: 0.75rem;\n`;\n\nconst Initiale = styled.span`\n  position: absolute;\n  font-size: 7rem;\n  transform: translate(-50%, -50%);\n  opacity: 0.08;\n  user-select: none;\n  z-index: -1;\n`;\n\nconst Excerpt = styled.p`\n  grid-column: -1 / 1;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`;\n\ninterface Props {\n  title: string;\n  date: string;\n  excerpt: string;\n  slug: string;\n  timeToRead: number;\n  category: string;\n}\n\nexport class Article extends React.PureComponent<Props> {\n  public render() {\n    const { title, date, excerpt, slug, timeToRead, category } = this.props;\n    const firstChar = title.charAt(0);\n\n    return (\n      <Post>\n        <Title>\n          <Initiale>{firstChar}</Initiale>\n          <Link to={`/blog/${slug}`}>{title}</Link>\n        </Title>\n        <Subline>\n          {date} &mdash; {timeToRead} Min Read &mdash; In\n          <Link to={`/categories/${kebabCase(category)}`}> {category}</Link>\n        </Subline>\n        <Excerpt>{excerpt}</Excerpt>\n      </Post>\n    );\n  }\n}\n","import styled from 'styled-components';\nimport { lighten } from 'polished';\n\nexport const Button: any = styled.button`\n  background: ${props => props.theme.colors.primary};\n  border: none;\n  display: inline-flex;\n  align-items: center;\n  border-radius: ${(props: any) => (props.big ? '1.5rem' : '1rem')};\n  font-size: ${(props: any) => (props.big ? '1.2rem' : '1rem')};\n  color: white;\n  padding: ${(props: any) => (props.big ? '0.35rem 1.6rem' : '0.25rem 1.5rem')};\n  transition: all ${(props: any) => props.theme.transitions.normal};\n  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);\n  &:hover {\n    background: ${(props: any) => lighten(0.05, props.theme.colors.primary)};\n    cursor: pointer;\n    transform: translateY(-2px);\n  }\n  &:focus {\n    outline: none;\n  }\n  svg {\n    width: 20px;\n    height: 20px;\n    margin-right: 0.75rem;\n    fill: white;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { darken, lighten } from 'polished';\n\nconst Wrapper = styled.header`\n  background: linear-gradient(\n    45deg,\n    ${props => darken(0.1, props.theme.colors.primary)},\n    ${props => lighten(0.1, props.theme.colors.primary)}\n  );\n  grid-column: 1 / -1;\n  margin-left: -1rem;\n  margin-right: -1rem;\n  padding: 2rem 2rem 5rem 2rem;\n  box-shadow: inset 0px -10px 30px 0px rgba(0, 0, 0, 0.1);\n`;\n\nconst Content = styled.div`\n  max-width: 101rem;\n  margin: 0 auto;\n\n  a {\n    color: white;\n    &:hover {\n      opacity: 0.85;\n      color: white;\n    }\n  }\n`;\n\nexport class Header extends React.PureComponent<{}> {\n  public render() {\n    return (\n      <Wrapper>\n        <Content>{this.props.children}</Content>\n      </Wrapper>\n    );\n  }\n}\n","const colors = {\n  primary: '#d02e77', // Color for buttons or links\n  bg: 'white', // Background color\n  grey: {\n    dark: 'rgba(0, 0, 0, 0.9)',\n    default: 'rgba(0, 0, 0, 0.7)',\n    light: 'rgba(0, 0, 0, 0.5)',\n    ultraLight: 'rgba(0, 0, 0, 0.25)',\n  },\n};\n\nconst transitions = {\n  normal: '0.5s',\n};\n\nconst fontSize = {\n  small: '0.9rem',\n};\n\nexport default {\n  colors,\n  transitions,\n  fontSize,\n};\n","import React from 'react';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport styled, { ThemeProvider, createGlobalStyle } from 'styled-components';\r\nimport theme from '../../config/Theme';\r\nimport { media } from '../utils/media';\r\nimport split from 'lodash/split';\r\nimport './layout.scss';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ::selection {\r\n    color: ${theme.colors.bg};\r\n    background: ${theme.colors.primary};\r\n  }\r\n  body {\r\n    background: ${theme.colors.bg};\r\n    color: ${theme.colors.grey.default};\r\n    @media ${media.phone} {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n  a {\r\n    color: ${theme.colors.grey.dark};\r\n    text-decoration: none;\r\n    transition: all ${theme.transitions.normal};\r\n  }\r\n  a:hover {\r\n    color: ${theme.colors.primary};\r\n  }\r\n  h1, h2, h3, h4 {\r\n    color: ${theme.colors.grey.dark};\r\n  }\r\n  blockquote {\r\n    font-style: italic;\r\n    position: relative;\r\n  }\r\n\r\n  blockquote:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    background: ${theme.colors.primary};\r\n    height: 100%;\r\n    width: 6px;\r\n    margin-left: -1.6rem;\r\n  }\r\n  label {\r\n    margin-bottom: .5rem;\r\n    color: ${theme.colors.grey.dark};\r\n  }\r\n  input, textarea {\r\n    border-radius: .5rem;\r\n    border: none;\r\n    background: rgba(0, 0, 0, 0.05);\r\n    padding: .25rem 1rem;\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Footer = styled.footer`\r\n  text-align: center;\r\n  padding: 3rem 0;\r\n  span {\r\n    font-size: 0.75rem;\r\n  }\r\n`;\r\n\r\nexport class Layout extends React.PureComponent<{}> {\r\n  public render() {\r\n    const { children } = this.props;\r\n\r\n    return (\r\n      <StaticQuery\r\n        query={graphql`\r\n          query LayoutQuery {\r\n            site {\r\n              buildTime(formatString: \"DD.MM.YYYY\")\r\n            }\r\n          }\r\n        `}\r\n        render={data => (\r\n          <ThemeProvider theme={theme}>\r\n            <React.Fragment>\r\n              <GlobalStyle />\r\n              {children}\r\n              <Footer>\r\n                &copy; {split(data.site.buildTime, '.')[2]} by Majid Hajian. All rights reserved. <br />\r\n                <a href=\"https://github.com/mhadaily/gatsby-starter-personal-typescript-blog\">GitHub Repository</a> <br />\r\n                <span>Last build: {data.site.buildTime}</span>\r\n              </Footer>\r\n            </React.Fragment>\r\n          </ThemeProvider>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport Post from '../models/Post';\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 6rem auto 0 auto;\n  a {\n    color: ${props => props.theme.colors.primary};\n    display: flex;\n    align-items: center;\n  }\n  justify-items: center;\n`;\n\nconst Prev = styled.div`\n  span {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    color: ${props => props.theme.colors.grey.light};\n  }\n`;\n\nconst Next = styled.div`\n  margin-left: auto;\n  text-align: right;\n  span {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    color: ${props => props.theme.colors.grey.light};\n  }\n`;\n\ninterface Props {\n  next: Post;\n  prev: Post;\n}\n\nexport class PrevNext extends React.PureComponent<Props> {\n  public render() {\n    const { prev, next } = this.props;\n    return (\n      <Wrapper>\n        {prev && (\n          <Prev>\n            <span>Previous</span>\n            <Link to={`/blog/${kebabCase(prev.frontmatter.title)}`}>{prev.frontmatter.title}</Link>\n          </Prev>\n        )}\n        {next && (\n          <Next>\n            <span>Next</span>\n            <Link to={`/blog/${kebabCase(next.frontmatter.title)}`}>{next.frontmatter.title}</Link>\n          </Next>\n        )}\n      </Wrapper>\n    );\n  }\n}\n","import styled from 'styled-components';\n\nexport const SectionTitle = styled.div`\n  font-size: ${props => props.theme.fontSize.small};\n  text-transform: uppercase;\n  font-weight: bold;\n  text-align: center;\n  color: ${props => props.theme.colors.grey.dark};\n  position: relative;\n  padding-bottom: 1rem;\n  margin-bottom: 4rem;\n\n  &:after {\n    content: '';\n    height: 1px;\n    width: 50px;\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    margin-left: -25px;\n    background: ${props => props.theme.colors.grey.ultraLight};\n  }\n`;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport config from '../../config/SiteConfig';\nimport Post from '../models/Post';\n\ninterface SEO {\n  postNode: Post;\n  postPath: string;\n  postSEO: boolean;\n}\n\nexport const SEO = (props: SEO) => {\n  const { postNode, postPath, postSEO } = props;\n  let title;\n  let description;\n  let image;\n  let postURL;\n  const realPrefix = config.pathPrefix === '/' ? '' : config.pathPrefix;\n  if (postSEO) {\n    const postMeta = postNode.frontmatter;\n    title = postMeta.title;\n    description = postNode.excerpt;\n    image = config.siteBanner;\n    postURL = config.siteUrl + realPrefix + postPath;\n  } else {\n    title = config.siteTitle;\n    description = config.siteDescription;\n    image = config.siteBanner;\n  }\n  image = config.siteUrl + realPrefix + image;\n  const blogURL = config.siteUrl + config.pathPrefix;\n  let schemaOrgJSONLD = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      '@id': blogURL,\n      url: blogURL,\n      name: title,\n      alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n    },\n  ];\n  if (postSEO) {\n    schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BlogPosting',\n        // @ts-ignore\n        '@id': postURL,\n        // @ts-ignore\n        url: postURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n        headline: title,\n        image: {\n          '@type': 'ImageObject',\n          url: image,\n        },\n        description: config.siteDescription,\n        datePublished: postNode.frontmatter.date,\n        dateModified: postNode.frontmatter.date,\n        author: {\n          '@type': 'Person',\n          name: config.author,\n        },\n        publisher: {\n          '@type': 'Organization',\n          name: config.author,\n          logo: {\n            '@type': 'ImageObject',\n            url: config.siteUrl + realPrefix + config.siteLogo,\n          },\n        },\n        isPartOf: blogURL,\n        mainEntityOfPage: {\n          '@type': 'WebSite',\n          '@id': blogURL,\n        },\n      },\n    ];\n  }\n  return (\n    <Helmet>\n      <html lang={config.siteLanguage} />\n      <title>{config.siteTitle}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"image\" content={image} />\n      <script type=\"application/ld+json\">{JSON.stringify(schemaOrgJSONLD)}</script>\n      <meta property=\"og:locale\" content={config.ogLanguage} />\n      <meta property=\"og:site_name\" content={config.ogSiteName ? config.ogSiteName : ''} />\n      <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n      {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"fb:app_id\" content={config.siteFBAppID ? config.siteFBAppID : ''} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={config.userTwitter ? config.userTwitter : ''} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:url\" content={config.siteUrl} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image} />\n    </Helmet>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr minmax(320px, 1000px) 1fr;\n  padding: 0 1rem;\n`;\n","import styled from 'styled-components';\nimport { media } from '../utils/media';\n\nexport const Content = styled.div`\n  grid-column: 2;\n  box-shadow: 0 4px 120px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  padding: 3rem 6rem;\n  @media ${media.tablet} {\n    padding: 3rem 2rem;\n  }\n  @media ${media.phone} {\n    padding: 2rem 1.5rem;\n  }\n  overflow: hidden;\n`;","export * from './Article';\nexport * from './Button';\nexport * from './Header';\nexport * from './Layout';\nexport * from './PrevNext';\nexport * from './SectionTitle';\nexport * from './SEO';\nexport * from './Subline';\nexport * from './Wrapper';\nexport * from './Content';\n"],"sourceRoot":""}