{"version":3,"sources":["webpack:///./src/templates/AllTag.tsx","webpack:///./src/utils/media.ts","webpack:///./config/SiteConfig.ts","webpack:///./src/components/Subline.tsx","webpack:///./src/components/Article.tsx","webpack:///./src/components/Button.tsx","webpack:///./src/components/Header.tsx","webpack:///./config/Theme.ts","webpack:///./src/components/Layout.tsx","webpack:///./src/components/PrevNext.tsx","webpack:///./src/components/SectionTitle.tsx","webpack:///./src/components/SEO.tsx","webpack:///./src/components/Wrapper.tsx","webpack:///./src/components/Content.tsx","webpack:///./src/components/index.tsx"],"names":["Content","styled","div","withConfig","displayName","componentId","props","theme","colors","bg","media","tablet","phone","Title","h3","AllTagTemplate","render","tags","this","pathContext","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components__WEBPACK_IMPORTED_MODULE_7__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","title","config","siteTitle","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","map","tag","index","key","kebabCase","React","PureComponent","__webpack_require__","d","__webpack_exports__","pathPrefix","siteTitleAlt","siteUrl","siteLanguage","siteBanner","favicon","siteDescription","author","siteLogo","userTwitter","ogSiteName","ogLanguage","themeColor","backgroundColor","headerFontFamily","bodyFontFamily","baseFontSize","siteFBAppID","Subline","fontSize","small","grey","light","sectionTitle","Post","article","h2","Initiale","span","Excerpt","p","Article","_React$PureComponent","apply","arguments","inheritsLoose_default","prototype","_this$props","date","excerpt","slug","timeToRead","category","firstChar","charAt","react_default","gatsby_browser_entry","Button","button","primary","big","transitions","normal","lighten","Wrapper","header","darken","Header","children","Theme","dark","default","ultraLight","GlobalStyle","createGlobalStyle","_templateObject","Footer","footer","Layout","query","data","styled_components_browser_esm","Fragment","split","site","buildTime","href","_1536950682","Prev","Next","PrevNext","prev","next","PrevNext_Wrapper","frontmatter","SectionTitle","SEO","description","image","postURL","postNode","postPath","postSEO","realPrefix","blogURL","schemaOrgJSONLD","@context","@type","@id","url","name","alternateName","headline","datePublished","dateModified","publisher","logo","isPartOf","mainEntityOfPage","Helmet_default","lang","content","type","JSON","stringify","property","Article_Article","Header_Header","Layout_Layout","PrevNext_PrevNext","SEO_SEO","Wrapper_Wrapper","Content_Content"],"mappings":"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","file":"component---src-templates-all-tag-tsx-dec47453ea263f92740f.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport kebabCase from 'lodash/kebabCase';\nimport { Layout, Wrapper, Header, SectionTitle } from '../components';\nimport { media } from '../utils/media';\n\nimport config from '../../config/SiteConfig';\nimport PageProps from '../models/PageProps';\n\nconst Content = styled.div`\n  grid-column: 2;\n  box-shadow: 0 4px 120px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  padding: 2rem 4rem;\n  background-color: ${props => props.theme.colors.bg};\n  z-index: 9000;\n  margin-top: -3rem;\n  @media ${media.tablet} {\n    padding: 3rem 3rem;\n  }\n  @media ${media.phone} {\n    padding: 2rem 1.5rem;\n  }\n`;\n\nconst Title = styled.h3`\n  position: relative;\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n  margin-bottom: 0.75rem;\n`;\n\nexport default class AllTagTemplate extends React.PureComponent<PageProps> {\n  public render() {\n    const { tags } = this.props.pathContext;\n    if (tags) {\n      return (\n        <Layout>\n          <Wrapper>\n            <Helmet title={`Tags | ${config.siteTitle}`} />\n            <Header>\n              <Link to=\"/\">{config.siteTitle}</Link>\n            </Header>\n            <Content>\n              <SectionTitle>Tags</SectionTitle>\n              {tags.map((tag, index: number) => (\n                <Title key={index}>\n                  <Link to={`/tags/${kebabCase(tag)}`}>{tag}</Link>\n                </Title>\n              ))}\n            </Content>\n          </Wrapper>\n        </Layout>\n      );\n    }\n  }\n}\n","const sizes = {\n  tablet: '1200px',\n  phone: '600px',\n};\n\nexport const media = {\n  tablet: `(max-width: ${sizes.tablet})`,\n  phone: `(max-width: ${sizes.phone})`,\n};\n","export default {\n  pathPrefix: '/', // Prefix for all links. If you deploy your site to example.com/portfolio your pathPrefix should be \"portfolio\"\n\n  siteTitle: 'Personal Typescript Blog', // Navigation and Site Title\n  siteTitleAlt: 'Personal Blog - Gatsby Starter', // Alternative Site title for SEO\n  siteUrl: 'https://personal-typescript-blog.github.com', // Domain of your site. No trailing slash!\n  siteLanguage: 'en', // Language Tag on <html> element\n  siteBanner: '/social/banner.jpg', // Your image for og:image tag. You can find it in the /static folder\n  favicon: 'src/favicon.png', // Your image for favicons. You can find it in the /src folder\n  siteDescription: 'Personal Blog with big typography', // Your site description\n  author: 'Majid Hajian', // Author for schemaORGJSONLD\n  siteLogo: '/social/logo.png', // Image for schemaORGJSONLD\n\n  // siteFBAppID: '123456789', // Facebook App ID - Optional\n  userTwitter: '@mhadaily', // Twitter Username - Optional\n  ogSiteName: 'mhadaily', // Facebook Site Name - Optional\n  ogLanguage: 'en_US', // Facebook Language\n\n  // Manifest and Progress color\n  // See: https://developers.google.com/web/fundamentals/web-app-manifest/\n  themeColor: '#3498DB',\n  backgroundColor: '#2b2e3c',\n\n  // Settings for typography.ts\n  headerFontFamily: 'Bitter',\n  bodyFontFamily: 'Open Sans',\n  baseFontSize: '18px',\n\n  // Social media\n  siteFBAppID: '',\n};\n","import styled from 'styled-components';\n\ninterface Props {\n  theme: {\n    fontSize: {\n      small: number;\n    };\n    colors: {\n      grey: {\n        light: string;\n      };\n    };\n  };\n  sectionTitle: string;\n}\n\nexport const Subline: any = styled.div`\n  font-size: ${(props: Props) => props.theme.fontSize.small};\n  color: ${(props: Props) => props.theme.colors.grey.light};\n  ${(props: Props) => props.sectionTitle && 'margin-top: -3rem'};\n  ${(props: Props) => props.sectionTitle && 'margin-bottom: 4rem'};\n  ${(props: Props) => props.sectionTitle && 'text-align: center'};\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport { Subline } from './Subline';\n\nconst Post = styled.article`\n  display: flex;\n  flex-direction: column;\n  margin-top: 3.5rem;\n  margin-bottom: 3.5rem;\n`;\n\nconst Title = styled.h2`\n  position: relative;\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n  margin-bottom: 0.75rem;\n`;\n\nconst Initiale = styled.span`\n  position: absolute;\n  font-size: 7rem;\n  transform: translate(-50%, -50%);\n  opacity: 0.08;\n  user-select: none;\n  z-index: -1;\n`;\n\nconst Excerpt = styled.p`\n  grid-column: -1 / 1;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`;\n\ninterface Props {\n  title: string;\n  date: string;\n  excerpt: string;\n  slug: string;\n  timeToRead: number;\n  category: string;\n}\n\nexport class Article extends React.PureComponent<Props> {\n  public render() {\n    const { title, date, excerpt, slug, timeToRead, category } = this.props;\n    const firstChar = title.charAt(0);\n\n    return (\n      <Post>\n        <Title>\n          <Initiale>{firstChar}</Initiale>\n          <Link to={`/blog/${slug}`}>{title}</Link>\n        </Title>\n        <Subline>\n          {date} &mdash; {timeToRead} Min Read &mdash; In\n          <Link to={`/categories/${kebabCase(category)}`}> {category}</Link>\n        </Subline>\n        <Excerpt>{excerpt}</Excerpt>\n      </Post>\n    );\n  }\n}\n","import styled from 'styled-components';\nimport { lighten } from 'polished';\n\nexport const Button: any = styled.button`\n  background: ${props => props.theme.colors.primary};\n  border: none;\n  display: inline-flex;\n  align-items: center;\n  border-radius: ${(props: any) => (props.big ? '1.5rem' : '1rem')};\n  font-size: ${(props: any) => (props.big ? '1.2rem' : '1rem')};\n  color: white;\n  padding: ${(props: any) => (props.big ? '0.35rem 1.6rem' : '0.25rem 1.5rem')};\n  transition: all ${(props: any) => props.theme.transitions.normal};\n  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);\n  &:hover {\n    background: ${(props: any) => lighten(0.05, props.theme.colors.primary)};\n    cursor: pointer;\n    transform: translateY(-2px);\n  }\n  &:focus {\n    outline: none;\n  }\n  svg {\n    width: 20px;\n    height: 20px;\n    margin-right: 0.75rem;\n    fill: white;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { darken, lighten } from 'polished';\n\nconst Wrapper = styled.header`\n  background: linear-gradient(\n    45deg,\n    ${props => darken(0.1, props.theme.colors.primary)},\n    ${props => lighten(0.1, props.theme.colors.primary)}\n  );\n  grid-column: 1 / -1;\n  margin-left: -1rem;\n  margin-right: -1rem;\n  padding: 2rem 2rem 5rem 2rem;\n  box-shadow: inset 0px -10px 30px 0px rgba(0, 0, 0, 0.1);\n`;\n\nconst Content = styled.div`\n  max-width: 101rem;\n  margin: 0 auto;\n\n  a {\n    color: white;\n    &:hover {\n      opacity: 0.85;\n      color: white;\n    }\n  }\n`;\n\nexport class Header extends React.PureComponent<{}> {\n  public render() {\n    return (\n      <Wrapper>\n        <Content>{this.props.children}</Content>\n      </Wrapper>\n    );\n  }\n}\n","const colors = {\n  primary: '#d02e77', // Color for buttons or links\n  bg: 'white', // Background color\n  grey: {\n    dark: 'rgba(0, 0, 0, 0.9)',\n    default: 'rgba(0, 0, 0, 0.7)',\n    light: 'rgba(0, 0, 0, 0.5)',\n    ultraLight: 'rgba(0, 0, 0, 0.25)',\n  },\n};\n\nconst transitions = {\n  normal: '0.5s',\n};\n\nconst fontSize = {\n  small: '0.9rem',\n};\n\nexport default {\n  colors,\n  transitions,\n  fontSize,\n};\n","import React from 'react';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport styled, { ThemeProvider, createGlobalStyle } from 'styled-components';\r\nimport theme from '../../config/Theme';\r\nimport { media } from '../utils/media';\r\nimport split from 'lodash/split';\r\nimport './layout.scss';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ::selection {\r\n    color: ${theme.colors.bg};\r\n    background: ${theme.colors.primary};\r\n  }\r\n  body {\r\n    background: ${theme.colors.bg};\r\n    color: ${theme.colors.grey.default};\r\n    @media ${media.phone} {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n  a {\r\n    color: ${theme.colors.grey.dark};\r\n    text-decoration: none;\r\n    transition: all ${theme.transitions.normal};\r\n  }\r\n  a:hover {\r\n    color: ${theme.colors.primary};\r\n  }\r\n  h1, h2, h3, h4 {\r\n    color: ${theme.colors.grey.dark};\r\n  }\r\n  blockquote {\r\n    font-style: italic;\r\n    position: relative;\r\n  }\r\n\r\n  blockquote:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    background: ${theme.colors.primary};\r\n    height: 100%;\r\n    width: 6px;\r\n    margin-left: -1.6rem;\r\n  }\r\n  label {\r\n    margin-bottom: .5rem;\r\n    color: ${theme.colors.grey.dark};\r\n  }\r\n  input, textarea {\r\n    border-radius: .5rem;\r\n    border: none;\r\n    background: rgba(0, 0, 0, 0.05);\r\n    padding: .25rem 1rem;\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Footer = styled.footer`\r\n  text-align: center;\r\n  padding: 3rem 0;\r\n  span {\r\n    font-size: 0.75rem;\r\n  }\r\n`;\r\n\r\nexport class Layout extends React.PureComponent<{}> {\r\n  public render() {\r\n    const { children } = this.props;\r\n\r\n    return (\r\n      <StaticQuery\r\n        query={graphql`\r\n          query LayoutQuery {\r\n            site {\r\n              buildTime(formatString: \"DD.MM.YYYY\")\r\n            }\r\n          }\r\n        `}\r\n        render={data => (\r\n          <ThemeProvider theme={theme}>\r\n            <React.Fragment>\r\n              <GlobalStyle />\r\n              {children}\r\n              <Footer>\r\n                &copy; {split(data.site.buildTime, '.')[2]} by Majid Hajian. All rights reserved. <br />\r\n                <a href=\"https://github.com/mhadaily/gatsby-starter-personal-typescript-blog\">GitHub Repository</a> <br />\r\n                <span>Last build: {data.site.buildTime}</span>\r\n              </Footer>\r\n            </React.Fragment>\r\n          </ThemeProvider>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport Post from '../models/Post';\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 6rem auto 0 auto;\n  a {\n    color: ${props => props.theme.colors.primary};\n    display: flex;\n    align-items: center;\n  }\n  justify-items: center;\n`;\n\nconst Prev = styled.div`\n  span {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    color: ${props => props.theme.colors.grey.light};\n  }\n`;\n\nconst Next = styled.div`\n  margin-left: auto;\n  text-align: right;\n  span {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    color: ${props => props.theme.colors.grey.light};\n  }\n`;\n\ninterface Props {\n  next: Post;\n  prev: Post;\n}\n\nexport class PrevNext extends React.PureComponent<Props> {\n  public render() {\n    const { prev, next } = this.props;\n    return (\n      <Wrapper>\n        {prev && (\n          <Prev>\n            <span>Previous</span>\n            <Link to={`/blog/${kebabCase(prev.frontmatter.title)}`}>{prev.frontmatter.title}</Link>\n          </Prev>\n        )}\n        {next && (\n          <Next>\n            <span>Next</span>\n            <Link to={`/blog/${kebabCase(next.frontmatter.title)}`}>{next.frontmatter.title}</Link>\n          </Next>\n        )}\n      </Wrapper>\n    );\n  }\n}\n","import styled from 'styled-components';\n\nexport const SectionTitle = styled.div`\n  font-size: ${props => props.theme.fontSize.small};\n  text-transform: uppercase;\n  font-weight: bold;\n  text-align: center;\n  color: ${props => props.theme.colors.grey.dark};\n  position: relative;\n  padding-bottom: 1rem;\n  margin-bottom: 4rem;\n\n  &:after {\n    content: '';\n    height: 1px;\n    width: 50px;\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    margin-left: -25px;\n    background: ${props => props.theme.colors.grey.ultraLight};\n  }\n`;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport config from '../../config/SiteConfig';\nimport Post from '../models/Post';\n\ninterface SEO {\n  postNode: Post;\n  postPath: string;\n  postSEO: boolean;\n}\n\nexport const SEO = (props: SEO) => {\n  const { postNode, postPath, postSEO } = props;\n  let title;\n  let description;\n  let image;\n  let postURL;\n  const realPrefix = config.pathPrefix === '/' ? '' : config.pathPrefix;\n  if (postSEO) {\n    const postMeta = postNode.frontmatter;\n    title = postMeta.title;\n    description = postNode.excerpt;\n    image = config.siteBanner;\n    postURL = config.siteUrl + realPrefix + postPath;\n  } else {\n    title = config.siteTitle;\n    description = config.siteDescription;\n    image = config.siteBanner;\n  }\n  image = config.siteUrl + realPrefix + image;\n  const blogURL = config.siteUrl + config.pathPrefix;\n  let schemaOrgJSONLD = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      '@id': blogURL,\n      url: blogURL,\n      name: title,\n      alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n    },\n  ];\n  if (postSEO) {\n    schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BlogPosting',\n        // @ts-ignore\n        '@id': postURL,\n        // @ts-ignore\n        url: postURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n        headline: title,\n        image: {\n          '@type': 'ImageObject',\n          url: image,\n        },\n        description: config.siteDescription,\n        datePublished: postNode.frontmatter.date,\n        dateModified: postNode.frontmatter.date,\n        author: {\n          '@type': 'Person',\n          name: config.author,\n        },\n        publisher: {\n          '@type': 'Organization',\n          name: config.author,\n          logo: {\n            '@type': 'ImageObject',\n            url: config.siteUrl + realPrefix + config.siteLogo,\n          },\n        },\n        isPartOf: blogURL,\n        mainEntityOfPage: {\n          '@type': 'WebSite',\n          '@id': blogURL,\n        },\n      },\n    ];\n  }\n  return (\n    <Helmet>\n      <html lang={config.siteLanguage} />\n      <title>{config.siteTitle}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"image\" content={image} />\n      <script type=\"application/ld+json\">{JSON.stringify(schemaOrgJSONLD)}</script>\n      <meta property=\"og:locale\" content={config.ogLanguage} />\n      <meta property=\"og:site_name\" content={config.ogSiteName ? config.ogSiteName : ''} />\n      <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n      {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"fb:app_id\" content={config.siteFBAppID ? config.siteFBAppID : ''} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={config.userTwitter ? config.userTwitter : ''} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:url\" content={config.siteUrl} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image} />\n    </Helmet>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr minmax(320px, 1000px) 1fr;\n  padding: 0 1rem;\n`;\n","import styled from 'styled-components';\nimport { media } from '../utils/media';\n\nexport const Content = styled.div`\n  grid-column: 2;\n  box-shadow: 0 4px 120px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  padding: 3rem 6rem;\n  @media ${media.tablet} {\n    padding: 3rem 2rem;\n  }\n  @media ${media.phone} {\n    padding: 2rem 1.5rem;\n  }\n  overflow: hidden;\n`;","export * from './Article';\nexport * from './Button';\nexport * from './Header';\nexport * from './Layout';\nexport * from './PrevNext';\nexport * from './SectionTitle';\nexport * from './SEO';\nexport * from './Subline';\nexport * from './Wrapper';\nexport * from './Content';\n"],"sourceRoot":""}