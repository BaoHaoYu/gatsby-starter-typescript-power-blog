{"version":3,"sources":["webpack:///./src/templates/Post.tsx","webpack:///./src/utils/media.ts","webpack:///./config/SiteConfig.ts","webpack:///./src/components/Subline.tsx","webpack:///./src/components/Article.tsx","webpack:///./src/components/Button.tsx","webpack:///./src/components/Header.tsx","webpack:///./config/Theme.ts","webpack:///./src/components/Layout.tsx","webpack:///./src/components/PrevNext.tsx","webpack:///./src/components/SectionTitle.tsx","webpack:///./src/components/SEO.tsx","webpack:///./src/components/Wrapper.tsx","webpack:///./src/components/Content.tsx","webpack:///./src/components/index.tsx"],"names":["Content","styled","article","withConfig","displayName","componentId","props","theme","colors","bg","media","tablet","phone","Title","h1","PostContent","div","Hero","grey","dark","PostPage","render","_this$props$pathConte","this","pathContext","prev","next","post","data","markdownRemark","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components__WEBPACK_IMPORTED_MODULE_7__","Fragment","postPath","fields","slug","postNode","postSEO","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","title","frontmatter","config","siteTitle","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","date","timeToRead","kebabCase","category","tags","map","tag","i","key","length","dangerouslySetInnerHTML","__html","html","React","PureComponent","postQuery","__webpack_require__","d","__webpack_exports__","pathPrefix","siteTitleAlt","siteUrl","siteLanguage","siteBanner","favicon","siteDescription","author","siteLogo","userTwitter","ogSiteName","ogLanguage","themeColor","backgroundColor","headerFontFamily","bodyFontFamily","baseFontSize","siteFBAppID","Subline","fontSize","small","light","sectionTitle","Post","h2","Initiale","span","Excerpt","p","Article","_React$PureComponent","apply","arguments","inheritsLoose_default","prototype","_this$props","excerpt","firstChar","charAt","react_default","gatsby_browser_entry","Button","button","primary","big","transitions","normal","lighten","Wrapper","header","darken","Header","children","Theme","default","ultraLight","GlobalStyle","createGlobalStyle","_templateObject","Footer","footer","Layout","query","styled_components_browser_esm","split","site","buildTime","href","_1536950682","Prev","Next","PrevNext","PrevNext_Wrapper","SectionTitle","SEO","description","image","postURL","realPrefix","blogURL","schemaOrgJSONLD","@context","@type","@id","url","name","alternateName","headline","datePublished","dateModified","publisher","logo","isPartOf","mainEntityOfPage","Helmet_default","lang","content","type","JSON","stringify","property","Article_Article","Header_Header","Layout_Layout","PrevNext_PrevNext","SEO_SEO","Wrapper_Wrapper","Content_Content"],"mappings":"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","file":"component---src-templates-post-tsx-a77f945bd65360f0cf60.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport { Link, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport kebabCase from 'lodash/kebabCase';\nimport { Layout, Wrapper, Header, Subline, SEO, PrevNext } from '../components';\nimport { media } from '../utils/media';\nimport config from '../../config/SiteConfig';\nimport '../utils/prismjs-theme.css';\nimport PathContext from '../models/PathContext';\nimport Post from '../models/Post';\n\nconst Content = styled.article`\n  grid-column: 2;\n  box-shadow: 0 4px 120px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  padding: 2rem 4rem;\n  background-color: ${props => props.theme.colors.bg};\n  z-index: 9000;\n  margin-top: -3rem;\n  @media ${media.tablet} {\n    padding: 3rem 3rem;\n  }\n  @media ${media.phone} {\n    padding: 2rem 1.5rem;\n  }\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 1rem;\n`;\n\nconst PostContent = styled.div`\n  margin-top: 4rem;\n`;\n\nconst Hero = styled.div`\n  grid-column: 2;\n  color: ${props => props.theme.colors.grey.dark};\n`;\n\ninterface Props {\n  data: {\n    markdownRemark: Post;\n  };\n  pathContext: PathContext;\n}\n\nexport default class PostPage extends React.PureComponent<Props> {\n  public render() {\n    const { prev, next } = this.props.pathContext;\n    const post = this.props.data.markdownRemark;\n    return (\n      <Layout>\n        <Wrapper>\n          {post ? (\n            <>\n              <SEO postPath={post.fields.slug} postNode={post} postSEO />\n              <Helmet title={`${post.frontmatter.title} | ${config.siteTitle}`} />\n              <Header>\n                <Link to=\"/\">{config.siteTitle}</Link>\n              </Header>\n              <Hero>\n                <Content>\n                  <Title>{post.frontmatter.title}</Title>\n                  <Subline>\n                    {post.frontmatter.date} &mdash; {post.timeToRead} Min Read &mdash; In{' '}\n                    <Link to={`/categories/${kebabCase(post.frontmatter.category)}`}>{post.frontmatter.category}</Link>\n                  </Subline>\n                  {post.frontmatter.tags ? (\n                    <Subline>\n                      Tags: &#160;\n                      {post.frontmatter.tags.map((tag, i) => (\n                        <Link key={i} to={`/tags/${kebabCase(tag)}`}>\n                          {tag} {i < post.frontmatter.tags.length - 1 ? `, ` : ``}\n                        </Link>\n                      ))}\n                    </Subline>\n                  ) : null}\n                  <PostContent dangerouslySetInnerHTML={{ __html: post.html }} />\n                  <PrevNext prev={prev} next={next} />\n                </Content>\n              </Hero>\n            </>\n          ) : null}\n        </Wrapper>\n      </Layout>\n    );\n  }\n}\n\nexport const postQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"DD.MM.YYYY\")\n        category\n        tags\n      }\n      timeToRead\n    }\n  }\n`;\n","const sizes = {\n  tablet: '1200px',\n  phone: '600px',\n};\n\nexport const media = {\n  tablet: `(max-width: ${sizes.tablet})`,\n  phone: `(max-width: ${sizes.phone})`,\n};\n","export default {\n  pathPrefix: '/', // Prefix for all links. If you deploy your site to example.com/portfolio your pathPrefix should be \"portfolio\"\n\n  siteTitle: 'Personal Typescript Blog', // Navigation and Site Title\n  siteTitleAlt: 'Personal Blog - Gatsby Starter', // Alternative Site title for SEO\n  siteUrl: 'https://personal-typescript-blog.github.com', // Domain of your site. No trailing slash!\n  siteLanguage: 'en', // Language Tag on <html> element\n  siteBanner: '/social/banner.jpg', // Your image for og:image tag. You can find it in the /static folder\n  favicon: 'src/favicon.png', // Your image for favicons. You can find it in the /src folder\n  siteDescription: 'Personal Blog with big typography', // Your site description\n  author: 'Majid Hajian', // Author for schemaORGJSONLD\n  siteLogo: '/social/logo.png', // Image for schemaORGJSONLD\n\n  // siteFBAppID: '123456789', // Facebook App ID - Optional\n  userTwitter: '@mhadaily', // Twitter Username - Optional\n  ogSiteName: 'mhadaily', // Facebook Site Name - Optional\n  ogLanguage: 'en_US', // Facebook Language\n\n  // Manifest and Progress color\n  // See: https://developers.google.com/web/fundamentals/web-app-manifest/\n  themeColor: '#3498DB',\n  backgroundColor: '#2b2e3c',\n\n  // Settings for typography.ts\n  headerFontFamily: 'Bitter',\n  bodyFontFamily: 'Open Sans',\n  baseFontSize: '18px',\n\n  // Social media\n  siteFBAppID: '',\n};\n","import styled from 'styled-components';\n\ninterface Props {\n  theme: {\n    fontSize: {\n      small: number;\n    };\n    colors: {\n      grey: {\n        light: string;\n      };\n    };\n  };\n  sectionTitle: string;\n}\n\nexport const Subline: any = styled.div`\n  font-size: ${(props: Props) => props.theme.fontSize.small};\n  color: ${(props: Props) => props.theme.colors.grey.light};\n  ${(props: Props) => props.sectionTitle && 'margin-top: -3rem'};\n  ${(props: Props) => props.sectionTitle && 'margin-bottom: 4rem'};\n  ${(props: Props) => props.sectionTitle && 'text-align: center'};\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport { Subline } from './Subline';\n\nconst Post = styled.article`\n  display: flex;\n  flex-direction: column;\n  margin-top: 3.5rem;\n  margin-bottom: 3.5rem;\n`;\n\nconst Title = styled.h2`\n  position: relative;\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n  margin-bottom: 0.75rem;\n`;\n\nconst Initiale = styled.span`\n  position: absolute;\n  font-size: 7rem;\n  transform: translate(-50%, -50%);\n  opacity: 0.08;\n  user-select: none;\n  z-index: -1;\n`;\n\nconst Excerpt = styled.p`\n  grid-column: -1 / 1;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`;\n\ninterface Props {\n  title: string;\n  date: string;\n  excerpt: string;\n  slug: string;\n  timeToRead: number;\n  category: string;\n}\n\nexport class Article extends React.PureComponent<Props> {\n  public render() {\n    const { title, date, excerpt, slug, timeToRead, category } = this.props;\n    const firstChar = title.charAt(0);\n\n    return (\n      <Post>\n        <Title>\n          <Initiale>{firstChar}</Initiale>\n          <Link to={`/blog/${slug}`}>{title}</Link>\n        </Title>\n        <Subline>\n          {date} &mdash; {timeToRead} Min Read &mdash; In\n          <Link to={`/categories/${kebabCase(category)}`}> {category}</Link>\n        </Subline>\n        <Excerpt>{excerpt}</Excerpt>\n      </Post>\n    );\n  }\n}\n","import styled from 'styled-components';\nimport { lighten } from 'polished';\n\nexport const Button: any = styled.button`\n  background: ${props => props.theme.colors.primary};\n  border: none;\n  display: inline-flex;\n  align-items: center;\n  border-radius: ${(props: any) => (props.big ? '1.5rem' : '1rem')};\n  font-size: ${(props: any) => (props.big ? '1.2rem' : '1rem')};\n  color: white;\n  padding: ${(props: any) => (props.big ? '0.35rem 1.6rem' : '0.25rem 1.5rem')};\n  transition: all ${(props: any) => props.theme.transitions.normal};\n  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);\n  &:hover {\n    background: ${(props: any) => lighten(0.05, props.theme.colors.primary)};\n    cursor: pointer;\n    transform: translateY(-2px);\n  }\n  &:focus {\n    outline: none;\n  }\n  svg {\n    width: 20px;\n    height: 20px;\n    margin-right: 0.75rem;\n    fill: white;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { darken, lighten } from 'polished';\n\nconst Wrapper = styled.header`\n  background: linear-gradient(\n    45deg,\n    ${props => darken(0.1, props.theme.colors.primary)},\n    ${props => lighten(0.1, props.theme.colors.primary)}\n  );\n  grid-column: 1 / -1;\n  margin-left: -1rem;\n  margin-right: -1rem;\n  padding: 2rem 2rem 5rem 2rem;\n  box-shadow: inset 0px -10px 30px 0px rgba(0, 0, 0, 0.1);\n`;\n\nconst Content = styled.div`\n  max-width: 101rem;\n  margin: 0 auto;\n\n  a {\n    color: white;\n    &:hover {\n      opacity: 0.85;\n      color: white;\n    }\n  }\n`;\n\nexport class Header extends React.PureComponent<{}> {\n  public render() {\n    return (\n      <Wrapper>\n        <Content>{this.props.children}</Content>\n      </Wrapper>\n    );\n  }\n}\n","const colors = {\n  primary: '#d02e77', // Color for buttons or links\n  bg: 'white', // Background color\n  grey: {\n    dark: 'rgba(0, 0, 0, 0.9)',\n    default: 'rgba(0, 0, 0, 0.7)',\n    light: 'rgba(0, 0, 0, 0.5)',\n    ultraLight: 'rgba(0, 0, 0, 0.25)',\n  },\n};\n\nconst transitions = {\n  normal: '0.5s',\n};\n\nconst fontSize = {\n  small: '0.9rem',\n};\n\nexport default {\n  colors,\n  transitions,\n  fontSize,\n};\n","import React from 'react';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport styled, { ThemeProvider, createGlobalStyle } from 'styled-components';\r\nimport theme from '../../config/Theme';\r\nimport { media } from '../utils/media';\r\nimport split from 'lodash/split';\r\nimport './layout.scss';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ::selection {\r\n    color: ${theme.colors.bg};\r\n    background: ${theme.colors.primary};\r\n  }\r\n  body {\r\n    background: ${theme.colors.bg};\r\n    color: ${theme.colors.grey.default};\r\n    @media ${media.phone} {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n  a {\r\n    color: ${theme.colors.grey.dark};\r\n    text-decoration: none;\r\n    transition: all ${theme.transitions.normal};\r\n  }\r\n  a:hover {\r\n    color: ${theme.colors.primary};\r\n  }\r\n  h1, h2, h3, h4 {\r\n    color: ${theme.colors.grey.dark};\r\n  }\r\n  blockquote {\r\n    font-style: italic;\r\n    position: relative;\r\n  }\r\n\r\n  blockquote:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    background: ${theme.colors.primary};\r\n    height: 100%;\r\n    width: 6px;\r\n    margin-left: -1.6rem;\r\n  }\r\n  label {\r\n    margin-bottom: .5rem;\r\n    color: ${theme.colors.grey.dark};\r\n  }\r\n  input, textarea {\r\n    border-radius: .5rem;\r\n    border: none;\r\n    background: rgba(0, 0, 0, 0.05);\r\n    padding: .25rem 1rem;\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Footer = styled.footer`\r\n  text-align: center;\r\n  padding: 3rem 0;\r\n  span {\r\n    font-size: 0.75rem;\r\n  }\r\n`;\r\n\r\nexport class Layout extends React.PureComponent<{}> {\r\n  public render() {\r\n    const { children } = this.props;\r\n\r\n    return (\r\n      <StaticQuery\r\n        query={graphql`\r\n          query LayoutQuery {\r\n            site {\r\n              buildTime(formatString: \"DD.MM.YYYY\")\r\n            }\r\n          }\r\n        `}\r\n        render={data => (\r\n          <ThemeProvider theme={theme}>\r\n            <React.Fragment>\r\n              <GlobalStyle />\r\n              {children}\r\n              <Footer>\r\n                &copy; {split(data.site.buildTime, '.')[2]} by Majid Hajian. All rights reserved. <br />\r\n                <a href=\"https://github.com/mhadaily/gatsby-starter-personal-typescript-blog\">GitHub Repository</a> <br />\r\n                <span>Last build: {data.site.buildTime}</span>\r\n              </Footer>\r\n            </React.Fragment>\r\n          </ThemeProvider>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport Post from '../models/Post';\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 6rem auto 0 auto;\n  a {\n    color: ${props => props.theme.colors.primary};\n    display: flex;\n    align-items: center;\n  }\n  justify-items: center;\n`;\n\nconst Prev = styled.div`\n  span {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    color: ${props => props.theme.colors.grey.light};\n  }\n`;\n\nconst Next = styled.div`\n  margin-left: auto;\n  text-align: right;\n  span {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    color: ${props => props.theme.colors.grey.light};\n  }\n`;\n\ninterface Props {\n  next: Post;\n  prev: Post;\n}\n\nexport class PrevNext extends React.PureComponent<Props> {\n  public render() {\n    const { prev, next } = this.props;\n    return (\n      <Wrapper>\n        {prev && (\n          <Prev>\n            <span>Previous</span>\n            <Link to={`/blog/${kebabCase(prev.frontmatter.title)}`}>{prev.frontmatter.title}</Link>\n          </Prev>\n        )}\n        {next && (\n          <Next>\n            <span>Next</span>\n            <Link to={`/blog/${kebabCase(next.frontmatter.title)}`}>{next.frontmatter.title}</Link>\n          </Next>\n        )}\n      </Wrapper>\n    );\n  }\n}\n","import styled from 'styled-components';\n\nexport const SectionTitle = styled.div`\n  font-size: ${props => props.theme.fontSize.small};\n  text-transform: uppercase;\n  font-weight: bold;\n  text-align: center;\n  color: ${props => props.theme.colors.grey.dark};\n  position: relative;\n  padding-bottom: 1rem;\n  margin-bottom: 4rem;\n\n  &:after {\n    content: '';\n    height: 1px;\n    width: 50px;\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    margin-left: -25px;\n    background: ${props => props.theme.colors.grey.ultraLight};\n  }\n`;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport config from '../../config/SiteConfig';\nimport Post from '../models/Post';\n\ninterface SEO {\n  postNode: Post;\n  postPath: string;\n  postSEO: boolean;\n}\n\nexport const SEO = (props: SEO) => {\n  const { postNode, postPath, postSEO } = props;\n  let title;\n  let description;\n  let image;\n  let postURL;\n  const realPrefix = config.pathPrefix === '/' ? '' : config.pathPrefix;\n  if (postSEO) {\n    const postMeta = postNode.frontmatter;\n    title = postMeta.title;\n    description = postNode.excerpt;\n    image = config.siteBanner;\n    postURL = config.siteUrl + realPrefix + postPath;\n  } else {\n    title = config.siteTitle;\n    description = config.siteDescription;\n    image = config.siteBanner;\n  }\n  image = config.siteUrl + realPrefix + image;\n  const blogURL = config.siteUrl + config.pathPrefix;\n  let schemaOrgJSONLD = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      '@id': blogURL,\n      url: blogURL,\n      name: title,\n      alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n    },\n  ];\n  if (postSEO) {\n    schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BlogPosting',\n        // @ts-ignore\n        '@id': postURL,\n        // @ts-ignore\n        url: postURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n        headline: title,\n        image: {\n          '@type': 'ImageObject',\n          url: image,\n        },\n        description: config.siteDescription,\n        datePublished: postNode.frontmatter.date,\n        dateModified: postNode.frontmatter.date,\n        author: {\n          '@type': 'Person',\n          name: config.author,\n        },\n        publisher: {\n          '@type': 'Organization',\n          name: config.author,\n          logo: {\n            '@type': 'ImageObject',\n            url: config.siteUrl + realPrefix + config.siteLogo,\n          },\n        },\n        isPartOf: blogURL,\n        mainEntityOfPage: {\n          '@type': 'WebSite',\n          '@id': blogURL,\n        },\n      },\n    ];\n  }\n  return (\n    <Helmet>\n      <html lang={config.siteLanguage} />\n      <title>{config.siteTitle}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"image\" content={image} />\n      <script type=\"application/ld+json\">{JSON.stringify(schemaOrgJSONLD)}</script>\n      <meta property=\"og:locale\" content={config.ogLanguage} />\n      <meta property=\"og:site_name\" content={config.ogSiteName ? config.ogSiteName : ''} />\n      <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n      {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"fb:app_id\" content={config.siteFBAppID ? config.siteFBAppID : ''} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={config.userTwitter ? config.userTwitter : ''} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:url\" content={config.siteUrl} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image} />\n    </Helmet>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr minmax(320px, 1000px) 1fr;\n  padding: 0 1rem;\n`;\n","import styled from 'styled-components';\nimport { media } from '../utils/media';\n\nexport const Content = styled.div`\n  grid-column: 2;\n  box-shadow: 0 4px 120px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  padding: 3rem 6rem;\n  @media ${media.tablet} {\n    padding: 3rem 2rem;\n  }\n  @media ${media.phone} {\n    padding: 2rem 1.5rem;\n  }\n  overflow: hidden;\n`;","export * from './Article';\nexport * from './Button';\nexport * from './Header';\nexport * from './Layout';\nexport * from './PrevNext';\nexport * from './SectionTitle';\nexport * from './SEO';\nexport * from './Subline';\nexport * from './Wrapper';\nexport * from './Content';\n"],"sourceRoot":""}